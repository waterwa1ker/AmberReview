import {input, file_exist, exit, split} from "std";

fun give_line_count(filename: Text) {
	return unsafe $grep -c \$ {filename}$;
}

fun check_line_number(line_number : Num, correct_line_number : Num) {
	if line_number < 0 or line_number > correct_line_number {
		echo "Incorrect line number!";
		exit(1);
	} else {
		if correct_line_number == 0 {
			echo "Empty file :(";
			exit(1);
		}
	}
}

fun give_sequence(filename: Text, line_number : Num, interval : Text) {
	let line = unsafe $sed -n {line_number}p {filename}$;
	let result = unsafe $echo "{line}" | cut -c {interval}$;
	return result;
}

main(args) {
	let filepath_request = "Write a path to file:\n";
	let interval_request = "Write an interval from line. Format - d-d:\n";
	let filepath = input(filepath_request);
	if not file_exist(filepath) {
		echo "Incorrect filepath!";
		exit(1);
	}
	let line_number_request = "Choose a line number from " + "{filepath}" + ":\n";
	let line_number = input(line_number_request) as Num;
	let correct_line_number = give_line_count(filepath) as Num;
	check_line_number(line_number, correct_line_number);
	let interval = input(interval_request);
	echo "Последовательность символов - " + give_sequence(filepath, line_number, interval);
}
